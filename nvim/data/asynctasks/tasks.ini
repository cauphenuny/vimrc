[file-run]
command=[ -f "$(VIM_FILENOEXT).in" ] && "./$(VIM_FILENOEXT)" < "$(VIM_FILENOEXT).in" || "./$(VIM_FILENOEXT)"
command:python=python3 "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:typst=open "$(VIM_PATHNOEXT).pdf"
output=quickfix
cwd=$(VIM_FILEDIR)

[file-run-terminal]
command="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
output=terminal
pos=floaterm
cwd=$(VIM_FILEDIR)

[file-build:release]
command:c=$CC $(+cflags:$CFLAGS) -DLOCAL -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lm
command:cpp=$CXX $(+cxxflags:$CXXFLAGS) -DLOCAL -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)"
command:asm=$CC "$(VIM_FILEPATH)" -g -o "$(VIM_PATHNOEXT)"
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:typst=typst c "$(VIM_FILEPATH)"
command:rust=rustc "$(VIM_FILEPATH)"
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-build:debug]
command:c=$CC $(+cflags:$CFLAGS) -DLOCAL -Wall "$(VIM_FILEPATH)" -g -o "$(VIM_PATHNOEXT)" -lm
command:cpp=$CXX $(+cxxflags:$CXXFLAGS) -DLOCAL -Wall "$(VIM_FILEPATH)" -g -o "$(VIM_PATHNOEXT)"
command:asm=$CC "$(VIM_FILEPATH)" -g -o "$(VIM_PATHNOEXT)"
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-build:debug-san]
command:c=$CC $(+cflags:$CFLAGS) -DLOCAL -Wall "$(VIM_FILEPATH)" -g -fsanitize=address,null,bounds -o "$(VIM_PATHNOEXT)" -lm
command:cpp=$CXX $(+cxxflags:$CXXFLAGS) -DLOCAL -Wall "$(VIM_FILEPATH)" -g -fsanitize=address,null,bounds -o "$(VIM_PATHNOEXT)"
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-debug]
command:c,cpp/linux=type lldb && lldb "$(VIM_PATHNOEXT)" || gdb "$(VIM_PATHNOEXT)"
output=terminal
pos=help

[project-build]
command=make
cwd=$(VIM_ROOT)

[project-run]
command=make run
cwd=$(VIM_ROOT)
output=terminal
