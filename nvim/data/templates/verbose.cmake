cmake_minimum_required (VERSION 3.5)
project (
    unnamed
    VERSION 0.1.0
    LANGUAGES CXX
)
set (CMAKE_VERBOSE_MAKEFILE OFF)
set (EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
set (LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
# set (CMAKE_C_STANDARD 99)
set (CMAKE_CXX_STANDARD 20)
set (CMAKE_EXPORT_COMPILE_COMMANDS True)
add_compile_options (-Wall -Wextra -Wshadow) 
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L/opt/homebrew/opt/llvm/lib/c++ -Wl,-rpath,/opt/homebrew/opt/llvm/lib/c++")
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE Release CACHE STRING "No build type selected, default to Release" FORCE)
endif()
string (ASCII 27 ESC)
set (COLOR_GREEN "${ESC}[1;32m")
set (COLOR_RED "${ESC}[1;31m")
set (COLOR_RESET "${ESC}[0m")
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    message ("-- ${COLOR_RED}Debug mode${COLOR_RESET}")
    add_compile_options (-DDEBUG -g -fno-omit-frame-pointer -fsanitize=undefined,address,leak,null,bounds)
    add_link_options (-fno-omit-frame-pointer -fsanitize=undefined,address,leak,null,bounds)
    set (VERSION_STRING "${PROJECT_VERSION} (debug)")
else()
    message ("-- ${COLOR_GREEN}Release mode${COLOR_RESET}")
    add_compile_options (-DRELEASE)
    set (VERSION_STRING "${PROJECT_VERSION}")
endif()
add_definitions (-DVERSION="${VERSION_STRING}")

include_directories (${PROJECT_SOURCE_DIR})
include_directories (include)
file(GLOB_RECURSE INCLUDE_LIST "*.h")

aux_source_directory (${PROJECT_SOURCE_DIR} SRC_LIST)
add_executable (main ${SRC_LIST})
